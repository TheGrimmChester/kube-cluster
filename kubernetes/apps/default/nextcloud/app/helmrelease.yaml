---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 4.5.11
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 28.0.1-fpm-alpine
      flavor: fpm-alpine
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hajimari.io/icon: mdi:dropbox
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - &host nextcloud.${SECRET_DOMAIN}
#          secretName: ${SECRET_DOMAIN//./-}-prod-tls
    nextcloud:
      host: *host
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: redis
        - name: REDIS_HOST_PORT
          value: "6379"
      extraInitContainers:
        - name: wait-database
          image: alpine:3.19.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              value: postgres-v15-rw.database.svc.cluster.local
        - name: wait-redis
          image: alpine:3.19.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          env:
            - name: REDIS_HOST
              value: redis-headless.database.svc.cluster.local
            - name: REDIS_HOST_PORT
              value: "6379"
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.25-alpine
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-v15-rw.database.svc.cluster.local:5432
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: database-username
        passwordKey: database-password
    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    cronjob:
      enabled: true
    resources:
      requests:
        cpu: 34m
        memory: 204Mi
      limits:
        memory: 363Mi
    # this seems to be required for nextcloud initialization which takes a long time
    startupProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
