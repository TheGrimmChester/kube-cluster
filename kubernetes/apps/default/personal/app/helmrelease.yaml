---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: personal
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      personal:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: "registry.clouded.fr/${PERSONAL_SECRET_DOMAIN}"
              tag: latest
            env:
              TZ: Europe/Paris
              APP_ENV: prod
              DATABASE_URL: ""
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: []
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: personal
        ports:
          http:
            port: 80
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${PERSONAL_SECRET_DOMAIN}"
        className: external-personal
        hosts:
          - host: "${PERSONAL_SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: "www.${PERSONAL_SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      tmp:
        type: emptyDir
      blog:
        type: nfs
        server: 192.168.1.101
        path: "/mnt/Apps/config-docker/${PERSONAL_SECRET_DOMAIN}/app/public/blog/"
        globalMounts:
          - path: "/app/public/blog/"
            readOnly: false
