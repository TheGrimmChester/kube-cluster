apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: photoprism-self
  namespace: default
spec:
  interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 30
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 30
  uninstall:
    keepHistory: false

  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  # See https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    image:
      repository: docker.io/photoprism/photoprism
      tag: latest@sha256:cbaf35b067efc179dee68ab703db8911c2ad306830831458abb369542ee4cf12

    envFrom:
    - secretRef:
        name: photoprism-secrets
        optional: false

    env:
      PHOTOPRISM_STORAGE_PATH: /photoprism/storage
      PHOTOPRISM_ORIGINALS_PATH: /photoprism/originals
#      PHOTOPRISM_DATABASE_DRIVER: postgresql
      PHOTOPRISM_FFMPEG_ENCODER: intel
      ## See other config options from PhotoPrism documentation: https://docs.photoprism.org/getting-started/config-options/
      # PHOTOPRISM_ADMIN_PASSWORD: "please-change"     # Initial admin password: PLEASE CHANGE!
      # PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "false"                   # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "true"               # Enable experimental features
      PHOTOPRISM_SITE_URL: "https://photos.${SECRET_DOMAIN}/"  # Canonical / public site URL
      PHOTOPRISM_SITE_TITLE: "Photoprism"
      PHOTOPRISM_SITE_CAPTION: "Self"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_DISABLE_CHOWN: "false"       # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_BACKUPS: "false"     # disables backing up albums and photo metadata to YAML files
      PHOTOPRISM_DISABLE_WEBDAV: "false"      # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"    # disables settings UI and API
      PHOTOPRISM_DISABLE_PLACES: "false"      # disables reverse geocoding and maps
      PHOTOPRISM_DISABLE_EXIFTOOL: "false"    # disables creating JSON metadata sidecar files with ExifTool
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"  # disables all features depending on TensorFlow
      PHOTOPRISM_DETECT_NSFW: "false"         # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "false"         # allows uploads that MAY be offensive (no effect without TensorFlow)
      PHOTOPRISM_RAW_PRESETS: "false"         # enables applying user presets when converting RAW images (reduces performance)
      PHOTOPRISM_THUMB_FILTER: "lanczos"      # resample filter, best to worst: blackman, lanczos, cubic, linear
      PHOTOPRISM_THUMB_UNCACHED: "true"       # enables on-demand thumbnail rendering (high memory and cpu usage)
      PHOTOPRISM_THUMB_SIZE: 2048             # pre-rendered thumbnail size limit (default 2048, min 720, max 7680)
      # PHOTOPRISM_THUMB_SIZE: 4096           # Retina 4K, DCI 4K (requires more storage); 7680 for 8K Ultra HD
      PHOTOPRISM_THUMB_SIZE_UNCACHED: 7680    # on-demand rendering size limit (default 7680, min 720, max 7680)
      PHOTOPRISM_JPEG_SIZE: 7680              # size limit for converted image files in pixels (720-30000)
      PHOTOPRISM_JPEG_QUALITY: 85             # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      TF_CPP_MIN_LOG_LEVEL: 0                 # show TensorFlow log messages for development

      # PHOTOPRISM_SITE_AUTHOR: ""
      # # You may optionally set user, group and/or file permissions using environment variables:
      UID: 1002
      GID: 1002
      UMASK: 0000
      PHOTOPRISM_ORIGINALS_LIMIT: 4000 # in MB (default 1000)
    podSecurityContext:
      runAsUser: 1002
      runAsGroup: 1002
      fsGroup: 1002
      fsGroupChangePolicy: OnRootMismatch
#    volumeClaimTemplates:
#      - name: config
#        mountPath: /photoprism
#        accessMode: ReadWriteOnce
#        size: 1Gi
#        storageClass: ceph-block

    persistence:
      config:
        enabled: true
        type: hostPath
        hostPath: /mnt/Apps/volumes/photoprism
        mountPath: /photoprism
      originals:
        enabled: true
        type: hostPath
        hostPath: /mnt/Backup/Accounts/nmi/Images/photoprism
        mountPath: /photoprism/originals/nicolas
      public:
        enabled: true
        type: hostPath
        hostPath: /mnt/Backup/Photos/Public
        mountPath: /photoprism/originals/public

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "192.168.1.209"
        annotations:
          coredns.io/hostname: "photos.${SECRET_DOMAIN}"
          "io.cilium/lb-ipam-ips": "192.168.1.209"

        externalTrafficPolicy: Local
        ports:
          http:
            port: 2342
#    resources:
#      requests:
#        gpu.intel.com/i915: 1
##        cpu: 100m
##        memory: 1000Mi
#      limits:
#        gpu.intel.com/i915: 1
##        memory: 4000Mi

    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
#          nginx.ingress.kubernetes.io/whitelist-source-range: |
#            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/icon: arcticons:photoprism
          hajimari.io/info: Private Photos
          hajimari.io/group: media
          hajimari.io/appName: Private Photos
        hosts:
          - host: photos.${SECRET_DOMAIN}
            paths:
              - path: /
                # Ignored if not kubeVersion >= 1.14-0
                pathType: Prefix
        tls:
          - hosts:
              - photos.${SECRET_DOMAIN}

    nodeSelector:
      kubernetes.io/hostname: "truenas2012"
