---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app teslamate
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
#        initContainers:
#          init-db:
#            image:
#              repository: ghcr.io/onedr0p/postgres-init
#              tag: 16.2@sha256:3436dfbbc2799332a01361e007e3b408d016cfc235261e1caccc65e6edadf516
#              pullPolicy: Always
#            envFrom:
#              - secretRef:
#                  name: teslamate-secret
        containers:
          main:
            image:
              repository: teslamate/teslamate
              tag: 1.30.1@sha256:21b53b2490f88805a48c03998a1a307edfc908dec6323f5221097639bcb846bf
            env:
              TZ: "Europe/Paris"
              DISABLE_MQTT: "false"
            envFrom:
              - secretRef:
                  name: teslamate-secret
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: 4000
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          hajimari.io/icon: mdi:car
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Teslamate"
          gethomepage.dev/description: "Suivi Tesla en temps r√©el"
          gethomepage.dev/group: Surveillance
          gethomepage.dev/icon: "teslamate.png"
        hosts:
          - host: "teslamate.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
