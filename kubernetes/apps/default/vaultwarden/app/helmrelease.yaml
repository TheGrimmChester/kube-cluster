---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: default
spec:
  releaseName: vaultwarden
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: vaultwarden/server
      tag: 1.30.1

#    initContainers:
#      init-db:
#        image: ghcr.io/onedr0p/postgres-initdb:14.8
#        envFrom:
#          - secretRef:
#              name: vaultwarden-secret

    env:
      DATA_FOLDER: "config"
      WEBSOCKET_ENABLED: 'true'
      SIGNUPS_ALLOWED: 'false'
      SIGNUPS_VERIFY: 'false'
      SHOW_PASSWORD_HINT: 'false'
      DOMAIN: 'https://vault.${SECRET_DOMAIN}'
      ADMIN_TOKEN:
        valueFrom:
          secretKeyRef:
            name: vaultwarden-secret
            key: adminToken
      DATABASE_URL:
        valueFrom:
          secretKeyRef:
            name: vaultwarden-secret
            key: DATABASE_URL

    service:
      main:
        ports:
          http:
            port: 80
          websocket:
            enabled: true
            port: 3012

    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"

          hajimari.io/appName: 'Vault'
          hajimari.io/icon: simple-icons:bitwarden

        hosts:
          - host: vault.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
              - path: /notifications/hub/negotiate
                pathType: Prefix
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: 3012
        tls:
          - hosts:
              - vault.${SECRET_DOMAIN}

    persistence:
      config:
        enabled: true
        mountPath: /config
        size: 1Gi
        storageClass: ceph-block
        accessMode: ReadWriteOnce
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - truenas2012
