---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ha-chris
  namespace: home-automation
spec:
  releaseName: ha-chris
  interval: 15m
  timeout: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.4.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        #strategy: Recreate
        #        pod:
        #          hostNetwork: true
        #          dnsPolicy: ClusterFirstWithHostNet
        containers:
          main:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2024.9.3@sha256:1ad29727bdfe3f6422c231f3eb269a90eabb289ed00583ca423547b039a2c24f
            env:
              TZ: "Europe/Paris"
              HASS_HTTP_TRUSTED_PROXY_1: 192.168.1.0/24
              HASS_HTTP_TRUSTED_PROXY_2: 10.42.0.0/16
            envFrom:
              - secretRef:
                  name: home-assistant-chris-secret
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: true
            resources:
              limits:
                memory: 3000Mi
              requests:
                cpu: 100m
                memory: 1000Mi
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups:
                - 100
          #            securityContext:
          #              allowPrivilegeEscalation: false
          #              readOnlyRootFilesystem: true
          #              capabilities: { drop: ["ALL"] }
          #            securityContext:
          #              allowPrivilegeEscalation: false
          #              readOnlyRootFilesystem: true
          #              capabilities: { drop: ["ALL"] }

          codeserver:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.93.1@sha256:c69e398d1b64589b3b77a7becfd03f4ec524982def20e6bffbb51b1b839e72ba
            env:
              TZ: "Europe/Paris"
            args:
              - "--auth"
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --auth
              - "none"
              - --port
              - "12321"
              - "/config"
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
        pod:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100
#
#    defaultPodOptions:
#      securityContext:
#        runAsNonRoot: true
#        runAsUser: 568
#        runAsGroup: 568
#        fsGroup: 568
#        fsGroupChangePolicy: OnRootMismatch
#        seccompProfile: { type: RuntimeDefault }
#        supplementalGroups:
#          - 100

    service:
      main:
        #        type: LoadBalancer
        controller: main
        #        loadBalancerIP: ${SVC_HASS_IP}
        ports:
          http:
            port: 8123
      #          mdns-tcp:
      #            enabled: true
      #            port: 5353
      #            protocol: TCP
      #            targetPort: 5353
      #          mdns-udp:
      #            enabled: true
      #            port: 5353
      #            protocol: UDP
      #            targetPort: 5353
      codeserver:
        #        type: ClusterIP
        controller: main
        ports:
          http:
            enabled: true
            port: 12321
            protocol: TCP
            targetPort: 12321
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home-assistant"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "HA Chris"
          gethomepage.dev/description: ""
          gethomepage.dev/group: Automatisation
          gethomepage.dev/icon: "home-assistant.png"
        hosts:
          - host: "hass-c.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
      codeserver:
        enabled: true
        className: external
        annotations:
          hajimari.io/appName: 'Hass Config Chris'
          hajimari.io/icon: cib:visual-studio-code
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;

        hosts:
          - host: "hass-code-c.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: codeserver
                  port: http
    persistence:
      config:
        existingClaim: config-ha-chris-0
        globalMounts:
          - path: /config
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block

    nodeSelector:
      kubernetes.io/hostname: "worker-1"
