---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex-ripper
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
#  dependsOn:
#    - name: cluster-apps-intel-device-plugin-gpu
#      namespace: tools
#    - name: rook-ceph-cluster
#      namespace: rook-ceph
  values:
    controllers:
      plex-ripper:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: plexripper/plexripper
              tag: dev@sha256:2d535f540363bce394ef425f8f6b960a9ac8b18938c6f7a7e18d479bdaf1b4b8
            env:
              TZ: Europe/Paris
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 7000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
#                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        # Hardware acceleration using an Intel iGPU w/ QuickSync
        # These IDs below should be matched to your `video` and `render` group on the host
        # To obtain those IDs run the following grep statement on the host:
        # $ cat /etc/group | grep "video\|render"
        # video:x:44:
        # render:x:105:
        supplementalGroups: [44, 105, 10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: plex-ripper
        type: LoadBalancer
        ports:
          http:
            port: 7000
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;

        hosts:
          - host: "plex-ripper.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

    persistence:
#      config:
#        existingClaim: plex
#        # TODO: If setting up Plex for the first time, you'll want to add the globalMounts section
#        # globalMounts:
#        #   - path: /config/Library/Application Support/Plex Media Server
#      # Separate PVC for cache to avoid backing up cache files
#      config:
#        type: nfs
#        server: 192.168.1.101
#        path: /mnt/Apps/kube/volumes/plex
#        globalMounts:
#          - path: /Config
#            readOnly: false
#      cache:
#        existingClaim: plex-cache
#        globalMounts:
#          - path: /config/Library/Application Support/Plex Media Server/Cache
      config:
        enabled: true
        globalMounts:
          - path: /Config
            readOnly: false
        size: 1Gi
        storageClass: ceph-block
        accessMode: ReadWriteOnce
      tmp:
        type: emptyDir
      download:
        type: nfs
        server: 192.168.1.101
        path: /mnt/Entertainments/Downloads
        globalMounts:
          - path: /Downloads
            readOnly: false
      movies:
        type: nfs
        server: 192.168.1.101
        path: /mnt/Entertainments/Movies
        globalMounts:
          - path: /Movies
            readOnly: false
      shows:
        type: nfs
        server: 192.168.1.101
        path: /mnt/Entertainments/TV Shows
        globalMounts:
          - path: /TvShows
            readOnly: false
