---
apiVersion: v1
kind: Service
metadata:
  name: solar-router
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  clusterIP: None
  type: ClusterIP
  ipFamilyPolicy: SingleStack
---
apiVersion: v1
kind: Endpoints
metadata:
  name: solar-router
subsets:
  - addresses:
      - ip: 192.168.1.117
    ports:
      - name: http
        port: 80
        protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: solar-router
  annotations:
    hajimari.io/appName: 'solar-router'
    external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
    kubernetes.io/ingress.class: external
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Routeur solaire"
    gethomepage.dev/description: "Controlleur du routeur solaire"
    gethomepage.dev/group: Automatisation
    gethomepage.dev/icon: "mdi-water-boiler-auto"
    gethomepage.dev/ping: "solar-router.${SECRET_DOMAIN}"

    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}?rm=$request_method"
    nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Method $request_method;

spec:
  ingressClassName: external
  rules:
    - host: &host "solar-router.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: solar-router
                port:
                  number: 80
  tls:
    - hosts:
        - *host
